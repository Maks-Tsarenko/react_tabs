{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onSelectedTabId","onTabSelected","findedSelectedTab","find","tabId","id","className","map","tab","classNames","href","onClick","handelSelectTabId","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACeC,EACX,EADJC,cAEMC,EACFJ,EAAKK,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAON,MAAkBD,EAAK,GAQ3D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAC,GACR,OACE,oBACE,UAAQ,MAERF,UAAWG,IAAW,CACpB,YAAaP,EAAkBG,KAAOG,EAAIH,KAJ9C,SAOE,mBACEK,KAAI,WAAMF,EAAIH,IACd,UAAQ,UACRM,QAAS,kBAtBC,SAACH,GACrBA,EAAIH,KAAON,GACbC,EAAgBQ,GAoBWI,CAAkBJ,IAHnC,SAKGA,EAAIK,SAVFL,EAAIH,WAmBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAkBY,cC7CdhB,EAAO,CAClB,CAAEO,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASlB,EAAK,IAAxD,mBAAOC,EAAP,KAAsBkB,EAAtB,KAEA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBP,EAAcc,SAGpC,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeA,EAAcM,GAC7BJ,cAAegB,QCrBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ec7e5bc3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected(tab: Tab): void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected: onSelectedTabId,\n}) => {\n  const findedSelectedTab\n    = tabs.find(tabId => tabId.id === selectedTabId) || tabs[0];\n\n  const handelSelectTabId = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onSelectedTabId(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                data-cy=\"Tab\"\n                key={tab.id}\n                className={classNames({\n                  'is-active': findedSelectedTab.id === tab.id,\n                })}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handelSelectTabId(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {findedSelectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabId.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId.id}\n        onTabSelected={setSelectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}