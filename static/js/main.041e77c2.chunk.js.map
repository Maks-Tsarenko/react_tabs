{"version":3,"sources":["helper/findTabById.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["findTabById","tabs","tabId","find","tab","id","Tabs","selectedTabId","onTabSelected","findedSelectedTab","getTabById","className","map","classNames","href","onClick","handelSelectTabId","title","content","App","useState","setSelectedTabId","selectedTab","getSelectedTabTitle","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAACC,EAAaC,GAGvC,OAFiBD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAE1BD,EAAK,I,OCKbK,EAAwB,SAAC,GAI/B,IAHLL,EAGI,EAHJA,KACAM,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAoBC,EAAWT,EAAMM,GAQ3C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGV,EAAKW,KAAI,SAAAR,GAAG,OACX,oBACE,UAAQ,MAERO,UAAWE,IAAW,CACpB,YAAaJ,EAAkBJ,KAAOD,EAAIC,KAJ9C,SAOE,mBACES,KAAI,WAAMV,EAAIC,IACd,UAAQ,UACRU,QAAS,kBArBG,SAACX,GACrBA,EAAIC,KAAOE,GACbC,EAAcJ,GAmBWY,CAAkBZ,IAHnC,SAKGA,EAAIa,SAVFb,EAAIC,WAiBjB,qBAAKM,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAkBS,cCxCdjB,EAAO,CAClB,CAAEI,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASnB,EAAK,GAAGI,IAA3D,mBAAOE,EAAP,KAAsBc,EAAtB,KAgBA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAVwB,WAC1B,IAAMW,EAActB,EAAYC,EAAMM,GAEtC,OACEe,EAAcA,EAAYL,MAAQhB,EAAK,GAAGgB,MAOpBM,MAGtB,cAAC,EAAD,CACEtB,KAAMA,EACNM,cAAeA,EACfC,cAvBoB,SAACJ,GACrBA,EAAIC,KAAOE,GACbc,EAAiBjB,EAAIC,WChB3BmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.041e77c2.chunk.js","sourcesContent":["import { Tab } from '../types/Tab';\n\nexport const findTabById = (tabs: Tab[], tabId: string) => {\n  const foundTab = tabs.find(tab => tab.id === tabId);\n\n  return foundTab || tabs[0];\n};\n","import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\nimport { findTabById as getTabById } from '../../helper/findTabById';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected(tab: Tab): void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const findedSelectedTab = getTabById(tabs, selectedTabId);\n\n  const handelSelectTabId = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={classNames({\n                'is-active': findedSelectedTab.id === tab.id,\n              })}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handelSelectTabId(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {findedSelectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\nimport { findTabById } from './helper/findTabById';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleSelectTabId = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      setSelectedTabId(tab.id);\n    }\n  };\n\n  const getSelectedTabTitle = () => {\n    const selectedTab = findTabById(tabs, selectedTabId);\n\n    return (\n      selectedTab ? selectedTab.title : tabs[0].title\n    );\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getSelectedTabTitle()}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleSelectTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}